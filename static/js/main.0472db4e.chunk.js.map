{"version":3,"sources":["constants/colors.js","components/header/index.tsx","components/loader/index.tsx","../../display/dist/constants/index.js","../../display/dist/utils/index.js","../../display/dist/pitch-display/index.js","components/pitch/index.tsx","components/pitch/pitch-monitor.tsx","components/buttons/stop.svg","components/buttons/play.svg","components/buttons/index.tsx","components/circle-chart/utils.tsx","components/circle-chart/circle-chat.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BACKGROUND","PRIMARY","PRIMARY_TEXT","Header","props","className","style","backgroundColor","color","Loader","detectorName","windowSize","clarityThreshold","displayType","onParamChange","Fragment","textAlign","href","target","value","onChange","e","parseInt","type","min","max","step","parseFloat","NOTE_STRINGS","OCTAVE_COLORS","noteFromPitch","frequency","noteNum","Math","log","round","centsOffFromPitch","note","floor","pow","frequencyFromNoteNumber","colorFromNote","octave","idx","length","PitchDisplay","container","timeSpan","timeOffset","this","frequencies","background","highlight","position","canvasStyle","bgCanvas","document","createElement","setAttribute","bgContext","getContext","noteCanvas","noteContext","appendChild","resize","w","clientWidth","h","clientHeight","width","height","scaleX","scaleLinear","domain","range","margin","scaleY","render","push","filter","val","now","time","full","Date","getTime","cleanupFrequencies","drawBackground","drawNotes","fillStyle","clearRect","fillRect","i","y","font","fillText","beginPath","strokeStyle","notes","t","f","c","clarity","centsOff","x","stroke","moveTo","lineTo","arc","PI","fill","PitchComponent","displayElement","React","createRef","pitchDisplay","lastRender","continuousUpdate","onResize","current","setBackgroundColor","startRender","updatePitch","requestAnimationFrame","freq","pushFrequency","ref","Component","PitchMonitor","stream","workerConnection","powerThreshold","enabled","pitchRenderer","useState","setFreq","setClarity","pendingRef","useRef","pitchSetupRef","setupConnection","useCallback","a","remoteHandle","call","pitchSetup","buffer","Float32Array","audioContext","AudioContext","mediaStreamSource","createMediaStreamSource","analyser","createAnalyser","fftSize","connect","console","warn","getFloatTimeDomainData","sampleRate","result","useEffect","escape","cancelRender","renderFrame","PitchRenderer","StopButton","onStop","onClick","src","StopIcon","alt","StartButton","loading","onStart","disabled","PlayIcon","LOG_A","log2","radialBoxLayoutOffsets","angle","r","pi","tan","arctan","atan","sqrt","sin","cos","outx","outy","criticalrange1","criticalrange2","b","B","NOTE_SYMBOLS_SHARP","C","Db","D","Eb","E","F","Gb","G","Ab","A","Bb","NOTE_SYMBOLS_FLAT","Frequency","hz","noteSymbols","noteFormat","Object","keys","logNote","rot","freqToNote","CircleChartBackground","memo","canvas","noteRefs","cX","cY","outerR","innerR","ctx","options","offsetAngle","ring","Path2D","ticks","tickLen","vecX","vecY","lineWidth","drawCircleChartBackground","div","getBoundingClientRect","divW","divH","ox","oy","left","top","map","CircleChart","setW","setH","surroundingDivRef","canvasPointerRef","computeInnerAndOuterRadius","freqToAngle","useLayoutEffect","handleResize","window","addEventListener","removeEventListener","pointerContext","opacity","vec_x","vec_y","nvec_x","nvec_y","lineJoin","drawCircleChartArrow","transformOrigin","transform","visibility","App","POWER_THRESHOLD","setState","state","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","then","loaded","catch","undefined","getTracks","stop","key","worker","Worker","process","messenger","WorkerMessenger","ParentHandshake","connection","mainDisplay","button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0472db4e.chunk.js","sourcesContent":["export const BACKGROUND = '#F5F5F5';\n\nexport const PRIMARY = '#3f51b5';\nexport const PRIMARY_LIGHT = '#757de8';\nexport const PRIMARY_DARK = '#002984';\nexport const PRIMARY_TEXT = '#ffffff';\n\nexport const SECONDARY = '#9c27b0';\nexport const SECONDARY_LIGHT = '#d05ce3';\nexport const SECONDARY_DARK = '#6a0080';\nexport const SECONDARY_TEXT = '#ffffff';\n","import React from 'react';\n\nimport { PRIMARY, PRIMARY_TEXT } from '../../constants/colors';\n\ninterface Props {}\n\nconst Header: React.FC<Props> = (props) => {\n  return (\n    <div\n      className=\"header\"\n      style={{ backgroundColor: PRIMARY, color: PRIMARY_TEXT }}\n    >\n      Pitch Detector\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport { State as AppState } from '../../App';\n\ninterface Props {\n  detectorName: 'autocorrelation' | 'mcleod';\n  windowSize: number;\n  clarityThreshold: number;\n  displayType: 'chart' | 'circle';\n  onParamChange: <K extends keyof AppState>(key: K, value: AppState[K]) => void;\n}\n\nconst Loader: React.FC<Props> = ({\n  detectorName,\n  windowSize,\n  clarityThreshold,\n  displayType,\n  onParamChange,\n}) => {\n  return (\n    <React.Fragment>\n      <div className=\"content\" style={{ textAlign: 'center' }}>\n        <h2>A Rust + WebAssembly Pitch Detector</h2>\n        <h3>Author</h3>\n        <span>Alessandro Genova</span>\n        <h3>Core Library</h3>\n        <span>\n          <a\n            href=\"https://github.com/alesgenova/pitch-detection\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n          <br />\n          (rust)\n        </span>\n        <h3>Demo App</h3>\n        <span>\n          <a\n            href=\"https://github.com/alesgenova/pitch-detection-app\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n          <br />\n          (wasm, react)\n        </span>\n        <br />\n        <h3>Detector</h3>\n        <select\n          value={detectorName}\n          onChange={(e) => {\n            onParamChange('detectorName', e.target.value as any);\n          }}\n        >\n          <option value=\"mcleod\">McLeod</option>\n          <option value=\"autocorrelation\">Autocorrelation</option>\n        </select>\n        <h3>Window Size</h3>\n        <select\n          value={windowSize}\n          onChange={(e) => {\n            onParamChange('windowSize', parseInt(e.target.value));\n          }}\n        >\n          <option value={512}>512 samples</option>\n          <option value={1024}>1024 samples</option>\n          <option value={2048}>2048 samples</option>\n          <option value={4096}>4096 samples</option>\n        </select>\n        <h3>Clarity Threshold</h3>\n        <input\n          value={clarityThreshold}\n          type=\"range\"\n          min={0.0}\n          max={1.0}\n          step={0.01}\n          onChange={(e) => {\n            onParamChange('clarityThreshold', parseFloat(e.target.value));\n          }}\n        />\n        <br />({clarityThreshold})<h3>Display Type</h3>\n        <select\n          value={displayType}\n          onChange={(e) => {\n            onParamChange('displayType', e.target.value as 'chart' | 'circle');\n          }}\n        >\n          <option value=\"chart\">Linear Chart</option>\n          <option value=\"circle\">Circle Chart</option>\n        </select>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","export const NOTE_STRINGS = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\nexport const OCTAVE_COLORS = [\n    [121, 85, 72],\n    [158, 158, 158],\n    [96, 125, 139],\n    [76, 175, 80],\n    [244, 67, 54],\n    [33, 150, 243],\n    [0, 150, 136],\n    [255, 235, 59],\n    [0, 188, 212],\n];\n","import { OCTAVE_COLORS } from '../constants';\nexport function noteFromPitch(frequency) {\n    let noteNum = 12 * (Math.log(frequency / 440) / Math.log(2));\n    return Math.round(noteNum) + 69;\n}\nexport function frequencyFromNoteNumber(note) {\n    return 440 * Math.pow(2, (note - 69) / 12);\n}\nexport function centsOffFromPitch(frequency, note) {\n    return Math.floor(1200 * Math.log(frequency / frequencyFromNoteNumber(note)) / Math.log(2));\n}\nexport function colorFromNote(note) {\n    let octave = Math.floor(note / 12) - 1;\n    let idx = Math.min(octave, OCTAVE_COLORS.length - 1);\n    idx = Math.max(0, idx);\n    return OCTAVE_COLORS[idx];\n}\n","import { scaleLinear } from 'd3-scale';\nimport { NOTE_STRINGS } from '../constants';\nimport { noteFromPitch, colorFromNote, centsOffFromPitch } from '../utils';\nclass PitchDisplay {\n    constructor(container, timeSpan = 15000, timeOffset = 7000) {\n        this.frequencies = [];\n        this.background = '#efefef';\n        this.highlight = '#888888';\n        this.container = container;\n        this.container.style.position = \"relative\";\n        const canvasStyle = \"position: absolute; width: 100%; height: 100%;\";\n        this.bgCanvas = document.createElement(\"canvas\");\n        this.bgCanvas.setAttribute(\"style\", canvasStyle);\n        this.bgContext = this.bgCanvas.getContext('2d');\n        this.noteCanvas = document.createElement(\"canvas\");\n        this.noteCanvas.setAttribute(\"style\", canvasStyle);\n        this.noteContext = this.noteCanvas.getContext('2d');\n        this.container.appendChild(this.bgCanvas);\n        this.container.appendChild(this.noteCanvas);\n        this.timeSpan = timeSpan;\n        this.timeOffset = timeOffset;\n        this.resize();\n    }\n    resize() {\n        let w = this.container.clientWidth;\n        let h = this.container.clientHeight;\n        this.bgCanvas.width = w;\n        this.bgCanvas.height = h;\n        this.noteCanvas.width = w;\n        this.noteCanvas.height = h;\n        this.scaleX = scaleLinear()\n            .domain([-this.timeOffset, -this.timeOffset + this.timeSpan])\n            .range([0, w]);\n        let margin = h / (NOTE_STRINGS.length + 1);\n        this.scaleY = scaleLinear()\n            .domain([0, NOTE_STRINGS.length - 1])\n            .range([h - margin, margin]);\n        this.render();\n    }\n    pushFrequency(frequency) {\n        this.frequencies.push(frequency);\n    }\n    cleanupFrequencies() {\n        // Throw away the frequencies that are out of the current display window\n        this.frequencies = this.frequencies.filter((val) => this.now - val.time < this.timeOffset);\n    }\n    render(full = true) {\n        this.now = (new Date()).getTime();\n        this.cleanupFrequencies();\n        if (full) {\n            this.drawBackground();\n        }\n        this.drawNotes();\n    }\n    setBackgroundColor(color) {\n        this.background = color;\n        this.drawBackground();\n    }\n    setHighlightColor(color) {\n        this.highlight = color;\n        this.drawBackground();\n    }\n    drawBackground() {\n        let w = this.bgCanvas.width;\n        let h = this.bgCanvas.height;\n        this.bgContext.fillStyle = this.background;\n        this.bgContext.clearRect(0, 0, w, h);\n        this.bgContext.fillRect(0, 0, w, h);\n        for (let i = 0; i < NOTE_STRINGS.length; ++i) {\n            let y = this.scaleY(i);\n            this.bgContext.fillStyle = this.highlight + '55';\n            this.bgContext.fillRect(0, y, w, 1);\n            this.bgContext.fillStyle = this.highlight;\n            this.bgContext.font = '14px Sans';\n            this.bgContext.fillText(NOTE_STRINGS[i], this.scaleX(0) + 20, y - 2);\n            this.bgContext.fillText(NOTE_STRINGS[i], 20, y - 2);\n        }\n        this.bgContext.fillStyle = this.highlight + '55';\n        this.bgContext.fillRect(this.scaleX(0), 0, 1, h);\n    }\n    drawNotes() {\n        let w = this.noteCanvas.width;\n        let h = this.noteCanvas.height;\n        this.noteContext.clearRect(0, 0, w, h);\n        this.noteContext.beginPath();\n        this.noteContext.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n        // Calculate notes and colors from frequencies\n        const notes = [];\n        for (let frequency of this.frequencies) {\n            let t = frequency.time;\n            let f = frequency.frequency;\n            let c = frequency.clarity;\n            let note = noteFromPitch(f);\n            let centsOff = centsOffFromPitch(f, note);\n            let x = this.scaleX(t - this.now);\n            let y = this.scaleY(note % 12 + centsOff / 100);\n            let color = colorFromNote(note);\n            notes.push({\n                time: t,\n                x,\n                y,\n                clarity: c,\n                color\n            });\n        }\n        // Draw lines\n        const timeCutoff = 500;\n        this.noteContext.beginPath();\n        for (let i = 1; i < notes.length; ++i) {\n            const { x, y, time } = notes[i];\n            const prevTime = notes[i - 1].time;\n            if (time - prevTime > timeCutoff) {\n                this.noteContext.stroke();\n                this.noteContext.beginPath();\n                this.noteContext.moveTo(x, y);\n            }\n            else {\n                this.noteContext.lineTo(x, y);\n            }\n        }\n        this.noteContext.stroke();\n        // Draw circles\n        for (let note of notes) {\n            const { x, y, clarity, color } = note;\n            this.noteContext.fillStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${clarity * 0.5})`;\n            this.noteContext.beginPath();\n            this.noteContext.arc(x, y, 3, 0, Math.PI * 2);\n            this.noteContext.fill();\n        }\n    }\n}\nexport { PitchDisplay };\n","import React, { Component } from 'react';\n\nimport { PitchDisplay } from 'pitch-display';\n\nimport { BACKGROUND } from '../../constants/colors';\n\nexport interface PitchProps {\n  freq: number | null;\n  clarity: number | null;\n}\n\nclass PitchComponent extends Component<PitchProps> {\n  displayElement = React.createRef<HTMLDivElement>();\n  pitchDisplay?: PitchDisplay;\n  lastRender: number = 0;\n  continuousUpdate: boolean = true;\n\n  componentDidMount() {\n    this.pitchDisplay = new PitchDisplay(\n      this.displayElement.current!,\n      6000,\n      5000\n    );\n    this.pitchDisplay.setBackgroundColor(BACKGROUND);\n\n    // We want to ensure `pitchDisplay` updates at regular\n    // time intervals even if the note has not changed (so\n    // that the display continues scrolling)\n    const startRender = () => {\n      this.updatePitch();\n      if (this.continuousUpdate) {\n        requestAnimationFrame(startRender);\n      }\n    };\n    startRender();\n  }\n\n  componentWillUnmount() {\n    this.continuousUpdate = false;\n  }\n\n  onResize = () => {\n    if (this.pitchDisplay) {\n      this.pitchDisplay.resize();\n    }\n  };\n\n  updatePitch() {\n    const time = new Date().getTime();\n    if (time - this.lastRender < 17) {\n      // We don't want to render faster than 60fps\n      return;\n    }\n    if (!this.pitchDisplay) {\n      return;\n    }\n    const { freq, clarity } = this.props;\n    if (freq && freq > 0) {\n      this.pitchDisplay.pushFrequency({\n        frequency: freq,\n        clarity: clarity || 0,\n        time,\n      });\n    }\n    this.lastRender = time;\n    this.pitchDisplay.render(false);\n  }\n\n  render() {\n    this.updatePitch();\n    return (\n      <React.Fragment>\n        <div\n          className=\"full\"\n          style={{ position: 'relative' }}\n          ref={this.displayElement}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PitchComponent;\n","import { Connection } from 'post-me';\nimport React from 'react';\nimport { WorkerMethods } from '../../../worker/types';\n\ninterface PitchSetup {\n  analyser?: AnalyserNode;\n  audioContext?: AudioContext;\n  buffer?: Float32Array;\n}\ninterface PitchProps {\n  stream: MediaStream;\n  workerConnection: Connection<{}, WorkerMethods, {}>;\n  detectorName: 'autocorrelation' | 'mcleod';\n  windowSize: number;\n  powerThreshold: number;\n  clarityThreshold: number;\n  enabled: boolean;\n  pitchRenderer: React.ComponentType<{\n    freq: number | null;\n    clarity: number | null;\n  }>;\n}\n\n/**\n * While `enabled` is truthy, get the pitch from the input source,\n * and pass its frequency and clarity to `pitchRenderer`.\n *\n * `pitchRenderer` should be a react component that accepts `freq` and `clarity`\n * props.\n *\n * @export\n * @param {PitchProps} {\n *   stream,\n *   detectorName,\n *   workerConnection,\n *   windowSize,\n *   powerThreshold,\n *   clarityThreshold,\n *   enabled,\n *   pitchRenderer,\n * }\n * @returns\n */\nexport function PitchMonitor({\n  stream,\n  detectorName,\n  workerConnection,\n  windowSize,\n  powerThreshold,\n  clarityThreshold,\n  enabled,\n  pitchRenderer,\n}: PitchProps) {\n  const [freq, setFreq] = React.useState<number | null>(null);\n  const [clarity, setClarity] = React.useState<number | null>(null);\n  const pendingRef = React.useRef(false);\n  const pitchSetupRef = React.useRef<PitchSetup>({});\n\n  // Gets called first-thing whenever this component's props change.\n  const setupConnection = React.useCallback(async () => {\n    await workerConnection\n      .remoteHandle()\n      .call('createDetector', detectorName, windowSize, windowSize / 2);\n    const pitchSetup = pitchSetupRef.current;\n    pitchSetup.buffer = new Float32Array(windowSize);\n    pitchSetup.audioContext = new AudioContext();\n    // Create an AudioNode from the stream.\n    const mediaStreamSource = pitchSetup.audioContext.createMediaStreamSource(\n      stream\n    );\n    // Connect it to the destination.\n    pitchSetup.analyser = pitchSetup.audioContext.createAnalyser();\n    pitchSetup.analyser.fftSize = windowSize;\n    mediaStreamSource.connect(pitchSetup.analyser);\n  }, [pitchSetupRef, windowSize, detectorName, stream, workerConnection]);\n\n  // Find the current pitch/clarity and save it in `freq`/`clarity`.\n  const updatePitch = React.useCallback(async () => {\n    if (!pendingRef.current) {\n      pendingRef.current = true;\n\n      const pitchSetup = pitchSetupRef.current;\n      const { analyser, buffer, audioContext } = pitchSetup;\n      if (!analyser || !buffer || !audioContext) {\n        console.warn(\n          'Trying to update the pitch, but missing an analyser/buffer/audioContext'\n        );\n        return;\n      }\n      analyser.getFloatTimeDomainData(buffer);\n      const result = await workerConnection\n        .remoteHandle()\n        .call(\n          'getPitch',\n          buffer,\n          audioContext.sampleRate,\n          powerThreshold,\n          clarityThreshold\n        );\n      const frequency = result[0];\n      const clarity = result[1];\n      if (frequency > 0) {\n        setFreq(frequency);\n        setClarity(clarity);\n      } else {\n        setFreq(null);\n        setClarity(null);\n      }\n\n      pendingRef.current = false;\n    }\n  }, [\n    pendingRef,\n    pitchSetupRef,\n    setFreq,\n    setClarity,\n    powerThreshold,\n    clarityThreshold,\n    workerConnection,\n  ]);\n\n  // This function only gets called when the dependencies update, and it automatically\n  // cleans up when it is called subsequent times. It starts an endless loop\n  // of computing the current pitch.\n  React.useEffect(() => {\n    if (!enabled) {\n      // This function runs whenever the state of `enabled` changes.\n      // When this function is re-run, it automatically cancels the\n      // the audio monitoring, so all we need to do is return here.\n      return;\n    }\n    console.log('Starting audio monitoring.');\n    const escape = { cancelRender: false };\n    function renderFrame() {\n      if (escape.cancelRender) {\n        return;\n      }\n      requestAnimationFrame(renderFrame);\n      updatePitch();\n    }\n    (async () => {\n      await setupConnection();\n      renderFrame();\n    })();\n\n    return () => {\n      console.log('Stopping audio monitoring.');\n      escape.cancelRender = true;\n    };\n  }, [setupConnection, updatePitch, enabled]);\n\n  const PitchRenderer = pitchRenderer;\n  return <PitchRenderer freq={freq} clarity={clarity} />;\n}\n","export default __webpack_public_path__ + \"static/media/stop.2f57eafa.svg\";","export default __webpack_public_path__ + \"static/media/play.f8ecb826.svg\";","import React from 'react';\nimport {\n  PRIMARY,\n  PRIMARY_LIGHT,\n  PRIMARY_TEXT,\n  SECONDARY,\n  SECONDARY_TEXT,\n} from '../../constants/colors';\nimport StopIcon from './stop.svg';\nimport PlayIcon from './play.svg';\n\nexport function StopButton({ onStop }: { onStop: () => void }) {\n  return (\n    <div className=\"floating-container\">\n      <button\n        onClick={onStop}\n        className=\"floating-button\"\n        style={{ backgroundColor: SECONDARY, color: SECONDARY_TEXT }}\n      >\n        <img src={StopIcon} alt=\"Stop\" />\n      </button>\n    </div>\n  );\n}\n\nexport function StartButton({\n  loading,\n  onStart,\n}: {\n  loading: boolean;\n  onStart: () => void;\n}) {\n  return (\n    <div className=\"floating-container-center\">\n      <button\n        disabled={loading}\n        onClick={onStart}\n        className=\"floating-button-large\"\n        style={{\n          backgroundColor: loading ? PRIMARY_LIGHT : PRIMARY,\n          color: PRIMARY_TEXT,\n        }}\n      >\n        <img src={PlayIcon} alt=\"Start\" />\n      </button>\n    </div>\n  );\n}\n","import { Note, NOTE_SYMBOLS_SHARP } from './circle-chat';\n\nexport function freqToNote(freq: number): { note: Note; octave: number } {\n  const notes = Object.keys(NOTE_SYMBOLS_SHARP) as Note[];\n  const logNote = Math.log2(freq) - LOG_A;\n  // LOG_A is the log of A_4\n  const octave = Math.floor(logNote) + 4;\n  const rot = (((logNote - 0.25) % 1) + 1) % 1;\n  for (let i = 0; i < 12; i++) {\n    const low = i / 12 - 1 / 24;\n    const hi = i / 12 + 1 / 24;\n    if (rot > low && rot <= hi) {\n      return { note: notes[i], octave };\n    }\n  }\n  return { note: 'C', octave };\n}\n\n// The log of A_4\nconst LOG_A = Math.log2(440);\n\n/**\n * Convert a frequency to an angle in radians. The frequency\n * of a \"C\" is at the top of the circle.\n *\n * @export\n * @param {number} freq\n * @returns {number}\n */\nexport function freqToAngle(freq: number): number {\n  // We subtract 0.5, because A is halfway around the circle chart from 0 deg.\n  return ((((Math.log2(freq) - LOG_A - 0.5) % 1) + 1) % 1) * Math.PI * 2;\n}\n\n/**\n * Computes the inner and outer radius for the circle chart\n * based on the available size.\n *\n * @param {number} w\n * @param {number} h\n * @returns\n */\nexport function computeInnerAndOuterRadius(w: number, h: number) {\n  const outerR = Math.min(w, h) / 3;\n  const innerR = outerR * 0.6;\n  return { innerR, outerR };\n}\n\n/**\n * Compute the offset from the center of a circle of radius `r` that a box\n * of width/height `w`/`h` needs to have to be tangent to the circle.\n *\n * @param {number} angle - angle in which to compute the displacement\n * @param {number} r - radius of the circle\n * @param {number} w - width of the box\n * @param {number} h - height of the box\n * @returns {[number, number]} - displacement of the lower-left corner of the box to be tangent\n */\nexport function radialBoxLayoutOffsets(\n  angle: number,\n  r: number,\n  w: number,\n  h: number\n): [number, number] {\n  angle = ((angle % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);\n\n  // This code was ported from Python. It's just easier to\n  // rename the math functions.\n  const pi = Math.PI;\n  const tan = Math.tan;\n  const arctan = Math.atan;\n  const sqrt = Math.sqrt;\n  const sin = Math.sin;\n  const cos = Math.cos;\n\n  let [outx, outy] = [0, 0];\n\n  if (r === 0) {\n    return [outx, outy];\n  }\n\n  const criticalrange1 = arctan(w / 2.0 / (r + h / 2.0));\n  const criticalrange2 = arctan(w / 2.0 / (r + h / 2.0));\n\n  // Edge is touching\n  if (angle < 0 + criticalrange1 || angle > 2 * pi - criticalrange1) {\n    outx = r;\n    outy = -(r + w / 2) * tan(angle) - h / 2.0;\n  } else if (angle > pi - criticalrange1 && angle < pi + criticalrange1) {\n    outx = -r - w;\n    outy = -(r + w / 2) * tan(pi - angle) - h / 2.0;\n  } else if (\n    angle > pi / 2 - criticalrange2 &&\n    angle < pi / 2 + criticalrange2\n  ) {\n    outx =\n      sqrt((w * w) / 4.0 + (r + h / 2.0) * (r + h / 2.0)) *\n        sin(pi / 2.0 - angle) -\n      w / 2.0;\n    outy = -(r + h);\n  } else if (\n    angle > (pi * 3) / 2 - criticalrange2 &&\n    angle < (pi * 3) / 2 + criticalrange2\n  ) {\n    outx =\n      sqrt((w * w) / 4.0 + (r + h / 2.0) * (r + h / 2.0)) *\n        sin(pi / 2 - angle) -\n      w / 2;\n    outy = r;\n  }\n  // Corner is touching\n  else if (angle >= 0 + criticalrange1 && angle <= pi / 2 - criticalrange2) {\n    const a = sqrt((w * w) / 4.0 + (h * h) / 4.0);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = c * cos(angle) - w / 2.0;\n    outy = -(c * sin(angle) + h / 2.0);\n  } else if (angle >= pi / 2 + criticalrange2 && angle <= pi - criticalrange1) {\n    //adjust angle so we can pretend we're in the first quadrant\n    angle = pi - angle;\n    const a = sqrt((w * w) / 4.0 + (h * h) / 4.0);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = -(c * cos(angle) - w / 2) - w;\n    outy = -(c * sin(angle) + h / 2);\n  } else if (\n    angle >= pi + criticalrange1 &&\n    angle <= (pi * 3) / 2 - criticalrange2\n  ) {\n    // adjust angle so we can pretend we're in the first quadrant\n    angle -= pi;\n    const a = sqrt((w * w) / 4 + (h * h) / 4);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = -c * cos(angle) - w / 2;\n    outy = c * sin(angle) - h / 2;\n  } else if (\n    angle >= (pi * 3) / 2 + criticalrange2 &&\n    angle <= 2 * pi - criticalrange1\n  ) {\n    // adjust angle so we can pretend we're in the first quadrant\n    angle = 2 * pi - angle;\n    const a = sqrt((w * w) / 4 + (h * h) / 4);\n    const b = r;\n    const B = angle - arctan(h / w);\n    const c = sqrt(b * b + (cos(B) * cos(B) - 1) * a * a) + cos(B) * a;\n    outx = c * cos(angle) - w / 2;\n    outy = c * sin(angle) - h / 2;\n  }\n\n  return [outx, outy];\n}\n","import React from 'react';\nimport {\n  computeInnerAndOuterRadius,\n  freqToAngle,\n  freqToNote,\n  radialBoxLayoutOffsets,\n} from './utils';\n\nexport type Note =\n  | 'C'\n  | 'Db'\n  | 'D'\n  | 'Eb'\n  | 'E'\n  | 'F'\n  | 'Gb'\n  | 'G'\n  | 'Ab'\n  | 'A'\n  | 'Bb'\n  | 'B';\n\nexport const NOTE_SYMBOLS_SHARP: { [key in Note]: string } = {\n  C: 'C',\n  Db: 'C♯',\n  D: 'D',\n  Eb: 'D♯',\n  E: 'E',\n  F: 'F',\n  Gb: 'F♯',\n  G: 'G',\n  Ab: 'G♯',\n  A: 'A',\n  Bb: 'A♯',\n  B: 'B',\n};\nexport const NOTE_SYMBOLS_FLAT: { [key in Note]: string } = {\n  C: 'C',\n  Db: 'D♭',\n  D: 'D',\n  Eb: 'E♭',\n  E: 'E',\n  F: 'F',\n  Gb: 'G♭',\n  G: 'G',\n  Ab: 'A♭',\n  A: 'A',\n  Bb: 'B♭',\n  B: 'B',\n};\n\nexport function drawCircleChartBackground(\n  ctx: CanvasRenderingContext2D,\n  [w, h]: [number, number],\n  options: {\n    innerR?: number;\n    outerR?: number;\n  } = {}\n) {\n  const offsetAngle = 0;\n  const [cX, cY] = [w / 2, h / 2];\n  const outerR = options.outerR ?? Math.min(w, h) / 3;\n  const innerR = options.innerR ?? outerR * 0.6;\n\n  const ring = new Path2D();\n  ring.arc(cX, cY, outerR, 0, 2 * Math.PI);\n  // If we don't move to the start of the next arc, there\n  // will be a line connecting them.\n  ring.moveTo(cX + innerR, cY);\n  ring.arc(cX, cY, innerR, 0, 2 * Math.PI);\n  ctx.fillStyle = 'rgb(204,204,240)';\n  ctx.fill(ring, 'evenodd');\n\n  ctx.strokeStyle = 'rgb(110,102,102)';\n\n  // draw some ticks\n  const ticks = new Path2D();\n  for (let i = 0; i < 5 * 12; i++) {\n    const angle = (i / (5 * 12)) * 2 * Math.PI - offsetAngle;\n    let tickLen = 0.5;\n    if (i % 5 === 0) {\n      // Every fifth tick is long\n      tickLen = 1.0;\n    }\n    const vecX = Math.cos(angle);\n    const vecY = Math.sin(angle);\n    ticks.moveTo(vecX * outerR + cX, vecY * outerR + cY);\n    ticks.lineTo(\n      vecX * (1 - 0.08 * tickLen) * outerR + cX,\n      vecY * (1 - 0.08 * tickLen) * outerR + cY\n    );\n  }\n  ctx.lineWidth = 2;\n  ctx.stroke(ticks);\n\n  ctx.lineWidth = 1;\n  ctx.stroke(ring);\n\n  return { innerR, outerR };\n}\n\nfunction drawCircleChartArrow(\n  ctx: CanvasRenderingContext2D,\n  [w, h]: [number, number],\n  options: {\n    angle: number;\n    opacity: number;\n    innerR: number;\n    outerR: number;\n  }\n) {\n  const { angle, opacity, innerR, outerR } = options;\n  const [vec_x, vec_y] = [Math.cos(angle), Math.sin(angle)];\n  // Compute the normal vector\n  const [nvec_x, nvec_y] = [-vec_y, vec_x];\n\n  ctx.moveTo(\n    vec_x * innerR + 3 * nvec_x + w / 2,\n    -(vec_y * innerR + 3 * nvec_y) + h / 2\n  );\n  ctx.lineTo(\n    vec_x * innerR - 3 * nvec_x + w / 2,\n    -(vec_y * innerR - 3 * nvec_y) + h / 2\n  );\n  ctx.lineTo(vec_x * outerR + w / 2, -(vec_y * outerR) + h / 2);\n\n  ctx.fillStyle = `rgba(0,128,204,${opacity})`;\n  ctx.fill();\n  ctx.strokeStyle = `rgba(0,77,204,${opacity})`;\n  ctx.lineJoin = 'bevel';\n  ctx.stroke();\n}\n\nfunction Frequency({\n  hz,\n  noteFormat,\n}: {\n  hz: number;\n  noteFormat: 'sharp' | 'flat';\n}) {\n  const noteSymbols =\n    noteFormat === 'sharp' ? NOTE_SYMBOLS_SHARP : NOTE_SYMBOLS_FLAT;\n  const { note, octave } = freqToNote(hz);\n  return (\n    <div className=\"freq-container\">\n      <span className=\"freq-note\">\n        {noteSymbols[note]}\n        <span className=\"freq-octave\">{octave}</span>\n      </span>\n      <span className=\"freq-hz\">{Math.round(hz)} Hz</span>\n    </div>\n  );\n}\n\nconst CircleChartBackground = React.memo(function CircleChartBackground({\n  w,\n  h,\n  noteFormat = 'sharp',\n}: {\n  w: number;\n  h: number;\n  noteFormat?: 'sharp' | 'flat';\n}) {\n  const canvas = React.useRef<HTMLCanvasElement>(null);\n  // The note labels are rendered in divs so we can use CSS to style them.\n  // We need to store refs to all these divs so we can dynamically compute their\n  // sizes.\n  const noteRefs = React.useRef<React.RefObject<HTMLDivElement>[]>([\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n    { current: null },\n  ]);\n  const offsetAngle = 0;\n  const [cX, cY] = [w / 2, h / 2];\n  const outerR = Math.min(w, h) / 3;\n  const innerR = outerR * 0.6;\n\n  const noteSymbols =\n    noteFormat === 'sharp' ? NOTE_SYMBOLS_SHARP : NOTE_SYMBOLS_FLAT;\n  const notes = Object.keys(noteSymbols) as Note[];\n\n  React.useEffect(() => {\n    const ctx = canvas.current?.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n\n    drawCircleChartBackground(ctx, [w, h], { innerR, outerR });\n    // Position all the labels\n    for (let i = 0; i < 12; i++) {\n      const angle = (-i / 12.0) * 2 * Math.PI + Math.PI / 2 + offsetAngle;\n      const ref = noteRefs.current[i];\n      if (!ref.current) {\n        continue;\n      }\n      const div = ref.current;\n      const { width: divW, height: divH } = div.getBoundingClientRect();\n      const [ox, oy] = radialBoxLayoutOffsets(angle, outerR + 4, divW, divH);\n      div.style.left = `${ox + cX}px`;\n      div.style.top = `${oy + cY}px`;\n    }\n  }, [w, h, noteFormat, cX, cY, innerR, outerR, offsetAngle]);\n\n  return (\n    <React.Fragment>\n      <canvas width={w} height={h} ref={canvas} className=\"freq-background\" />\n      {noteRefs.current.map((ref, i) => (\n        <div key={i} ref={ref} className=\"freq-note-label\">\n          {noteSymbols[notes[i]]}\n        </div>\n      ))}\n    </React.Fragment>\n  );\n});\n\nexport function CircleChart({\n  freq = 440,\n  clarity = 0,\n}: {\n  freq: number | null;\n  clarity: number | null;\n}) {\n  const [w, setW] = React.useState(400);\n  const [h, setH] = React.useState(400);\n  const surroundingDivRef = React.useRef<HTMLDivElement>(null);\n  const canvasPointerRef = React.useRef<HTMLCanvasElement>(null);\n  const { innerR, outerR } = computeInnerAndOuterRadius(w, h);\n  const angle = freqToAngle(freq || 440);\n\n  // Track resize changes and make sure to resize the circle chart accordingly\n  React.useLayoutEffect(() => {\n    function handleResize() {\n      const div = surroundingDivRef.current;\n      if (!div) {\n        return;\n      }\n      const { width, height } = div.getBoundingClientRect();\n      setW(width);\n      setH(height);\n    }\n    // Run the resizer once when the component mounts.\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [setW, setH, surroundingDivRef]);\n\n  React.useEffect(() => {\n    if (!canvasPointerRef.current) {\n      return;\n    }\n    const pointerContext = canvasPointerRef.current.getContext('2d');\n    if (!pointerContext) {\n      return;\n    }\n\n    //Our draw come here\n    drawCircleChartArrow(pointerContext, [w, h], {\n      angle: 0,\n      opacity: 0.8,\n      innerR,\n      outerR,\n    });\n  }, [w, h, innerR, outerR]);\n\n  return (\n    <div ref={surroundingDivRef} className=\"freq-surround\">\n      <CircleChartBackground w={w} h={h} noteFormat=\"sharp\" />\n      {freq && <Frequency hz={freq || 440} noteFormat=\"sharp\" />}\n      <canvas\n        className=\"freq-pointer\"\n        width={w}\n        height={h}\n        ref={canvasPointerRef}\n        style={{\n          transformOrigin: 'center',\n          transform: `rotate(${angle}rad)`,\n          visibility: freq ? 'visible' : 'hidden',\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { WorkerMessenger, ParentHandshake, Connection } from 'post-me';\n\nimport HeaderComponent from './components/header';\nimport LoaderComponent from './components/loader';\nimport PitchComponent from './components/pitch';\nimport { BACKGROUND } from './constants/colors';\nimport { PitchMonitor } from './components/pitch/pitch-monitor';\nimport { StartButton, StopButton } from './components/buttons';\nimport { CircleChart } from './components/circle-chart/circle-chat';\n\ninterface Props {}\nexport interface State {\n  loading: boolean;\n  loaded: boolean;\n  stream: MediaStream | undefined;\n  detectorName: 'mcleod' | 'autocorrelation';\n  windowSize: number;\n  clarityThreshold: number;\n  workerConnection: Connection | undefined;\n  displayType: 'chart' | 'circle';\n}\n\nclass App extends React.Component<Props, State> {\n  POWER_THRESHOLD = 0.15;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: false,\n      loaded: false,\n      stream: undefined,\n      detectorName: 'mcleod',\n      windowSize: 1024,\n      clarityThreshold: 0.6,\n      workerConnection: undefined,\n      displayType: 'chart',\n    };\n  }\n\n  componentDidMount() {\n    const worker = new Worker(\n      `${process.env.PUBLIC_URL}/pitch-detection/worker.js`\n    );\n\n    const messenger = new WorkerMessenger({ worker });\n\n    ParentHandshake(messenger, {}, 5, 1000)\n      .then((connection) => {\n        this.setState({ workerConnection: connection });\n      })\n      .catch(() => console.log('Failed connection to worker'));\n  }\n\n  onStart = () => {\n    this.setState((state) => {\n      return { ...state, loading: true };\n    });\n\n    const gotStream = (stream: MediaStream) => {\n      this.setState((state) => {\n        return {\n          ...state,\n          loading: false,\n          loaded: true,\n          stream: stream,\n        };\n      });\n    };\n\n    const gotError = (e: any) => {\n      console.log(e);\n      this.setState((state) => {\n        return {\n          ...state,\n          loading: false,\n          loaded: false,\n          stream: undefined,\n        };\n      });\n    };\n\n    const options = {\n      audio: {\n        echoCancellation: true,\n        autoGainControl: true,\n      },\n    };\n\n    navigator.mediaDevices\n      .getUserMedia(options)\n      .then(gotStream)\n      .catch(gotError);\n  };\n\n  onStop = () => {\n    const { stream } = this.state;\n    if (stream) {\n      for (let track of stream.getTracks()) {\n        track.stop();\n      }\n    }\n    this.setState((state) => {\n      return {\n        ...state,\n        loaded: false,\n        stream: undefined,\n      };\n    });\n  };\n\n  onParamChange = <K extends keyof State>(key: K, value: State[K]) => {\n    this.setState((state) => {\n      return {\n        ...state,\n        [key]: value,\n      };\n    });\n  };\n\n  render() {\n    const {\n      detectorName,\n      windowSize,\n      clarityThreshold,\n      loading,\n      loaded,\n      stream,\n      workerConnection,\n      displayType,\n    } = this.state;\n\n    let mainDisplay = null;\n    let button = null;\n    if (!loaded) {\n      mainDisplay = (\n        <LoaderComponent\n          detectorName={detectorName}\n          windowSize={windowSize}\n          clarityThreshold={clarityThreshold}\n          displayType={displayType}\n          onParamChange={this.onParamChange}\n        />\n      );\n      button = <StartButton loading={loading} onStart={this.onStart} />;\n    } else if (stream && workerConnection) {\n      const pitchRenderer =\n        displayType === 'circle' ? CircleChart : PitchComponent;\n      mainDisplay = (\n        <PitchMonitor\n          stream={stream}\n          detectorName={detectorName}\n          workerConnection={workerConnection}\n          windowSize={windowSize}\n          powerThreshold={this.POWER_THRESHOLD}\n          clarityThreshold={clarityThreshold}\n          enabled={true}\n          pitchRenderer={pitchRenderer}\n        />\n      );\n      button = <StopButton onStop={this.onStop} />;\n    }\n\n    return (\n      <div className=\"app\" style={{ backgroundColor: BACKGROUND }}>\n        <HeaderComponent />\n        <div className=\"content-container\">\n          {mainDisplay}\n          {button}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}