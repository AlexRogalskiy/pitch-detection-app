{"version":3,"sources":["components/header/index.js","constants/colors.js","components/loader/index.js","../../display/dist/constants/index.js","../../display/dist/utils/index.js","../../display/dist/pitch-display/index.js","components/pitch/index.js","App.js","serviceWorker.js","bootstrap.js","../../wasm/pkg/pitch_detection_wasm.js","components/loader/play.svg","components/pitch/stop.svg"],"names":["header","_ref","onClick","loading","react_default","a","createElement","className","style","backgroundColor","color","loader","detectorName","sampleRate","windowSize","clarityThreshold","onParamChange","onStart","position","textAlign","href","target","value","onChange","e","type","min","max","step","disabled","src","PlayIcon","NOTE_STRINGS","OCTAVE_COLORS","noteFromPitch","frequency","noteNum","Math","log","round","centsOffFromPitch","note","floor","pow","frequencyFromNoteNumber","colorFromNote","octave","idx","length","pitch_display_PitchDisplay","PitchDisplay","container","timeSpan","arguments","undefined","timeOffset","Object","classCallCheck","this","frequencies","background","highlight","canvasStyle","bgCanvas","document","setAttribute","bgContext","getContext","noteCanvas","noteContext","appendChild","resize","createClass","key","w","clientWidth","h","clientHeight","width","height","scaleX","d3_scale_src","domain","range","margin","scaleY","render","push","_this","filter","val","now","time","full","Date","getTime","cleanupFrequencies","drawBackground","drawNotes","fillStyle","clearRect","fillRect","i","y","font","fillText","beginPath","strokeStyle","notes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","t","f","c","clarity","centsOff","x","err","return","_notes$i","stroke","moveTo","lineTo","_i","_note","_x","_y","_color","concat","arc","PI","fill","PitchComponent","quit","mainLoop","requestAnimationFrame","updatePitch","onResize","pitchDisplay","console","displayElement","setBackgroundColor","_this$props","props","stream","detectorClass","detector","new","buffer","Float32Array","result","audioContext","AudioContext","mediaStreamSource","createMediaStreamSource","analyser","createAnalyser","fftSize","connect","window","addEventListener","removeEventListener","_this$props2","powerThreshold","getFloatTimeDomainData","get_pitch","_this$result","slicedToArray","pushFrequency","_this2","onStop","ref","StopIcon","Component","getDetectorClass","name","AutocorrelationDetector","McLeodDetector","App","possibleConstructorReturn","getPrototypeOf","call","POWER_THRESHOLD","setState","state","options","audio","echoCancellation","autoGainControl","SAMPLE_RATE","navigator","mediaDevices","getUserMedia","then","loaded","catch","getTracks","stop","_this$state","pitch","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","serviceWorker","ready","registration","unregister","__webpack_require__","d","__webpack_exports__","__wbindgen_throw","_home_alessandro_Software_rust_pitch_detection_www_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_alessandro_Software_rust_pitch_detection_www_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_pitch_detection_wasm_bg__WEBPACK_IMPORTED_MODULE_2__","cachegetFloat32Memory","getFloat32Memory","WASM_VECTOR_LEN","passArrayF32ToWasm","arg","ptr","set","freeMcLeodDetector","arg0","arg1","arg2","arg3","arg4","ptr0","len0","ptr4","len4","subarray","obj","create","prototype","__wrap","freeAutocorrelationDetector","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getStringFromWasm","len","decode","Uint8Array","Error","module","exports","p"],"mappings":"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","file":"static/js/3.eb3bfa99.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PRIMARY, PRIMARY_TEXT } from '../../constants/colors';\n\nexport default ({ onClick, loading }) => {\n  return (\n    <div className=\"header\" style={{backgroundColor: PRIMARY, color: PRIMARY_TEXT}}>\n      Pitch Detector\n    </div>\n  )\n}\n","export const BACKGROUND = \"#F5F5F5\";\n\nexport const PRIMARY = \"#3f51b5\";\nexport const PRIMARY_LIGHT = \"#757de8\";\nexport const PRIMARY_DARK = \"#002984\";\nexport const PRIMARY_TEXT = \"#ffffff\";\n\nexport const SECONDARY = \"#9c27b0\";\nexport const SECONDARY_LIGHT = \"#d05ce3\";\nexport const SECONDARY_DARK = \"#6a0080\";\nexport const SECONDARY_TEXT = \"#ffffff\";\n","import React from 'react';\n\nimport { BACKGROUND, PRIMARY, PRIMARY_LIGHT, PRIMARY_TEXT } from '../../constants/colors';\n\nimport PlayIcon from './play.svg';\n\nexport default ({ detectorName, sampleRate, windowSize, clarityThreshold, onParamChange, onStart, loading }) => {\n  return (\n    <div className=\"full\" style={{backgroundColor: BACKGROUND, position: 'relative'}}>\n      <div className=\"content\" style={{textAlign: 'center'}}>\n        <h2>\n          A Rust + WebAssembly Pitch Detector\n        </h2>\n\n        <br/>\n\n        <h3>\n          Author\n        </h3>\n        <span>\n          Alessandro Genova\n        </span>\n\n        <h3>\n          Core Library\n        </h3>\n        <span>\n          <a href=\"https://github.com/alesgenova/pitch-detection\" target=\"_blank\">Source</a>\n          <br/>\n          (rust)\n        </span>\n\n        <h3>\n          Demo App\n        </h3>\n        <span>\n          <a href=\"https://github.com/alesgenova/pitch-detection-app\" target=\"_blank\">Source</a>\n          <br/>\n          (wasm, react)\n        </span>\n\n        <br/>\n\n        <h3>\n          Detector\n        </h3>\n        <select value={detectorName} onChange={(e) => {onParamChange('detectorName', e.target.value)}}>\n          <option value=\"mcleod\">McLeod</option>\n          <option value=\"autocorrelation\">Autocorrelation</option>\n        </select>\n\n        <h3>\n          Sample Rate\n        </h3>\n        <select value={sampleRate} onChange={(e) => {onParamChange('sampleRate', e.target.value)}}>\n          <option value={11025}>11025 Hz</option>\n          <option value={22050}>22050 Hz</option>\n          <option value={44100}>44100 Hz</option>\n          <option value={48000}>48000 Hz</option>\n        </select>\n\n        <h3>\n          Window Size\n        </h3>\n        <select value={windowSize} onChange={(e) => {onParamChange('windowSize', e.target.value)}}>\n          <option value={512}>512 samples</option>\n          <option value={1024}>1024 samples</option>\n          <option value={2048}>2048 samples</option>\n          <option value={4096}>4096 samples</option>\n        </select>\n\n        <h3>\n          Clarity Threshold\n        </h3>\n        <input value={clarityThreshold} type=\"range\" min={0.0} max={1.0} step={0.01} onChange={(e) => {onParamChange('clarityThreshold', e.target.value)}}/>\n        <br/>\n        ({clarityThreshold})\n\n      </div>\n      <div className=\"floating-container-center\">\n        <button\n          disabled={loading}\n          onClick={onStart}\n          className=\"floating-button-large\"\n          style={{backgroundColor: loading ? PRIMARY_LIGHT : PRIMARY, color: PRIMARY_TEXT}}\n        >\n          <ion-icon src={PlayIcon}/>\n        </button>\n      </div>\n    </div>\n  )\n}\n","export var NOTE_STRINGS = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\nexport var OCTAVE_COLORS = [[121, 85, 72], [158, 158, 158], [96, 125, 139], [76, 175, 80], [244, 67, 54], [33, 150, 243], [0, 150, 136], [255, 235, 59], [0, 188, 212]];","import { OCTAVE_COLORS } from '../constants';\nexport function noteFromPitch(frequency) {\n  var noteNum = 12 * (Math.log(frequency / 440) / Math.log(2));\n  return Math.round(noteNum) + 69;\n}\nexport function frequencyFromNoteNumber(note) {\n  return 440 * Math.pow(2, (note - 69) / 12);\n}\nexport function centsOffFromPitch(frequency, note) {\n  return Math.floor(1200 * Math.log(frequency / frequencyFromNoteNumber(note)) / Math.log(2));\n}\nexport function colorFromNote(note) {\n  var octave = Math.floor(note / 12) - 1;\n  var idx = Math.min(octave, OCTAVE_COLORS.length - 1);\n  idx = Math.max(0, idx);\n  return OCTAVE_COLORS[idx];\n}","import _classCallCheck from \"/home/alessandro/Software/rust/pitch-detection-www/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alessandro/Software/rust/pitch-detection-www/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { scaleLinear } from 'd3-scale';\nimport { NOTE_STRINGS } from '../constants';\nimport { noteFromPitch, colorFromNote, centsOffFromPitch } from '../utils';\n\nvar PitchDisplay =\n/*#__PURE__*/\nfunction () {\n  function PitchDisplay(container) {\n    var timeSpan = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15000;\n    var timeOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 7000;\n\n    _classCallCheck(this, PitchDisplay);\n\n    this.frequencies = [];\n    this.background = '#efefef';\n    this.highlight = '#888888';\n    this.container = container;\n    this.container.style.position = \"relative\";\n    var canvasStyle = \"position: absolute; width: 100%; height: 100%;\";\n    this.bgCanvas = document.createElement(\"canvas\");\n    this.bgCanvas.setAttribute(\"style\", canvasStyle);\n    this.bgContext = this.bgCanvas.getContext('2d');\n    this.noteCanvas = document.createElement(\"canvas\");\n    this.noteCanvas.setAttribute(\"style\", canvasStyle);\n    this.noteContext = this.noteCanvas.getContext('2d');\n    this.container.appendChild(this.bgCanvas);\n    this.container.appendChild(this.noteCanvas);\n    this.timeSpan = timeSpan;\n    this.timeOffset = timeOffset;\n    this.resize();\n  }\n\n  _createClass(PitchDisplay, [{\n    key: \"resize\",\n    value: function resize() {\n      var w = this.container.clientWidth;\n      var h = this.container.clientHeight;\n      this.bgCanvas.width = w;\n      this.bgCanvas.height = h;\n      this.noteCanvas.width = w;\n      this.noteCanvas.height = h;\n      this.scaleX = scaleLinear().domain([-this.timeOffset, -this.timeOffset + this.timeSpan]).range([0, w]);\n      var margin = h / (NOTE_STRINGS.length + 1);\n      this.scaleY = scaleLinear().domain([0, NOTE_STRINGS.length - 1]).range([h - margin, margin]);\n      this.render();\n    }\n  }, {\n    key: \"pushFrequency\",\n    value: function pushFrequency(frequency) {\n      this.frequencies.push(frequency);\n    }\n  }, {\n    key: \"cleanupFrequencies\",\n    value: function cleanupFrequencies() {\n      var _this = this;\n\n      // Throw away the frequencies that are out of the current display window\n      this.frequencies = this.frequencies.filter(function (val) {\n        return _this.now - val.time < _this.timeOffset;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var full = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.now = new Date().getTime();\n      this.cleanupFrequencies();\n\n      if (full) {\n        this.drawBackground();\n      }\n\n      this.drawNotes();\n    }\n  }, {\n    key: \"setBackgroundColor\",\n    value: function setBackgroundColor(color) {\n      this.background = color;\n      this.drawBackground();\n    }\n  }, {\n    key: \"setHighlightColor\",\n    value: function setHighlightColor(color) {\n      this.highlight = color;\n      this.drawBackground();\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var w = this.bgCanvas.width;\n      var h = this.bgCanvas.height;\n      this.bgContext.fillStyle = this.background;\n      this.bgContext.clearRect(0, 0, w, h);\n      this.bgContext.fillRect(0, 0, w, h);\n\n      for (var i = 0; i < NOTE_STRINGS.length; ++i) {\n        var y = this.scaleY(i);\n        this.bgContext.fillStyle = this.highlight + '55';\n        this.bgContext.fillRect(0, y, w, 1);\n        this.bgContext.fillStyle = this.highlight;\n        this.bgContext.font = '14px Sans';\n        this.bgContext.fillText(NOTE_STRINGS[i], this.scaleX(0) + 20, y - 2);\n        this.bgContext.fillText(NOTE_STRINGS[i], 20, y - 2);\n      }\n\n      this.bgContext.fillStyle = this.highlight + '55';\n      this.bgContext.fillRect(this.scaleX(0), 0, 1, h);\n    }\n  }, {\n    key: \"drawNotes\",\n    value: function drawNotes() {\n      var w = this.noteCanvas.width;\n      var h = this.noteCanvas.height;\n      this.noteContext.clearRect(0, 0, w, h);\n      this.noteContext.beginPath();\n      this.noteContext.strokeStyle = 'rgba(0, 0, 0, 0.1)'; // Calculate notes and colors from frequencies\n\n      var notes = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.frequencies[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var frequency = _step.value;\n          var t = frequency.time;\n          var f = frequency.frequency;\n          var c = frequency.clarity;\n          var note = noteFromPitch(f);\n          var centsOff = centsOffFromPitch(f, note);\n          var x = this.scaleX(t - this.now);\n          var y = this.scaleY(note % 12 + centsOff / 100);\n          var color = colorFromNote(note);\n          notes.push({\n            time: t,\n            x: x,\n            y: y,\n            clarity: c,\n            color: color\n          });\n        } // Draw lines\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var timeCutoff = 500;\n      this.noteContext.beginPath();\n\n      for (var i = 1; i < notes.length; ++i) {\n        var _notes$i = notes[i],\n            x = _notes$i.x,\n            y = _notes$i.y,\n            time = _notes$i.time;\n        var prevTime = notes[i - 1].time;\n\n        if (time - prevTime > timeCutoff) {\n          this.noteContext.stroke();\n          this.noteContext.beginPath();\n          this.noteContext.moveTo(x, y);\n        } else {\n          this.noteContext.lineTo(x, y);\n        }\n      }\n\n      this.noteContext.stroke(); // Draw circles\n\n      for (var _i = 0; _i < notes.length; _i++) {\n        var _note = notes[_i];\n        var _x = _note.x,\n            _y = _note.y,\n            clarity = _note.clarity,\n            _color = _note.color;\n        this.noteContext.fillStyle = \"rgba(\".concat(_color[0], \", \").concat(_color[1], \", \").concat(_color[2], \", \").concat(clarity * 0.5, \")\");\n        this.noteContext.beginPath();\n        this.noteContext.arc(_x, _y, 3, 0, Math.PI * 2);\n        this.noteContext.fill();\n      }\n    }\n  }]);\n\n  return PitchDisplay;\n}();\n\nexport { PitchDisplay };","import React, { Component } from 'react';\n\nimport { PitchDisplay } from 'pitch-display';\n\nimport { BACKGROUND, SECONDARY, SECONDARY_LIGHT, SECONDARY_TEXT, PRIMARY_LIGHT } from '../../constants/colors';\nimport StopIcon from './stop.svg';\n\nclass PitchComponent extends Component {\n  audioContext;\n  mediaStreamSource;\n  analyser;\n  signal;\n  detector;\n  result;\n  buffer;\n  quit = false;\n  displayElement;\n  pitchDisplay;\n\n  componentDidMount() {\n    console.log('PitchComponent did mount', PitchDisplay);\n    this.pitchDisplay = new PitchDisplay(this.displayElement, 6000, 5000);\n    this.pitchDisplay.setBackgroundColor(BACKGROUND);\n    const { stream, detectorClass, windowSize } = this.props;\n    this.detector = detectorClass.new(windowSize, windowSize / 2);\n    this.buffer = new Float32Array( windowSize );\n    this.result = new Float32Array(2);\n    this.audioContext = new AudioContext();\n    // Create an AudioNode from the stream.\n    this.mediaStreamSource = this.audioContext.createMediaStreamSource(stream);\n    // Connect it to the destination.\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = windowSize;\n    this.mediaStreamSource.connect( this.analyser );\n    window.addEventListener('resize', this.onResize);\n    this.mainLoop();\n  }\n\n  componentWillUnmount() {\n    console.log('PitchComponent will unmount');\n    window.removeEventListener('resize', this.onResize);\n    this.quit = true;\n  }\n\n  mainLoop = () => {\n    if (this.quit) {\n      return;\n    }\n    requestAnimationFrame(this.mainLoop);\n    this.updatePitch();\n  }\n\n  onResize = () => {\n    this.pitchDisplay.resize();\n  }\n\n  updatePitch() {\n    const { sampleRate, powerThreshold, clarityThreshold } = this.props;\n    this.analyser.getFloatTimeDomainData(this.buffer);\n    this.detector.get_pitch(this.buffer, sampleRate, powerThreshold, clarityThreshold, this.result);\n    const [frequency, clarity] = this.result;\n    if (frequency > 0) {\n      const time = (new Date()).getTime();\n      this.pitchDisplay.pushFrequency({frequency, clarity, time});\n    }\n    this.pitchDisplay.render(false);\n  }\n\n  render() {\n    const { onStop } = this.props;\n    return (\n      <div className=\"full\" style={{position: 'relative'}}>\n        <div className=\"full\" style={{position: 'relative'}}\n          ref={ref => {this.displayElement = ref;}}\n        />\n        <div className=\"floating-container\">\n          <button\n            onClick={onStop}\n            className=\"floating-button\"\n            style={{backgroundColor: SECONDARY, color: SECONDARY_TEXT}}\n          >\n            <ion-icon src={StopIcon}/>\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PitchComponent;\n","import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nimport { AutocorrelationDetector, McLeodDetector } from 'pitch-detection-wasm';\n\nimport HeaderComponent from './components/header';\nimport LoaderComponent from './components/loader';\nimport PitchComponent from './components/pitch';\n\nfunction getDetectorClass(name) {\n  switch(name) {\n    case 'autocorrelation': {\n      return AutocorrelationDetector;\n    }\n\n    case 'mcleod': {\n      return McLeodDetector;\n    }\n\n    default: {\n      return McLeodDetector;\n    }\n  }\n}\n\nclass App extends Component {\n  POWER_THRESHOLD = 0.25;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      loaded: false,\n      stream: null,\n      detectorName: 'mcleod',\n      sampleRate: 44100,\n      windowSize: 1024,\n      clarityThreshold: 0.6\n    }\n  }\n\n  onStart = () => {\n    this.setState(state => {\n      state.loading = true;\n      return state;\n    });\n\n    const gotStream = (stream) => {\n      this.setState(state => {\n        state.loading = false;\n        state.loaded = true;\n        state.stream = stream;\n        return state;\n      });\n    }\n\n    const gotError = (e) => {\n      console.log(e);\n      this.setState(state => {\n        state.loading = false;\n        state.stream = null;\n        return state;\n      });\n    }\n\n    const options = {\n      audio: {\n        echoCancellation: true,\n        autoGainControl: true,\n        sampleRate: this.SAMPLE_RATE\n      }\n    }\n\n    navigator.mediaDevices.getUserMedia(options )\n      .then(gotStream)\n      .catch(gotError);\n  }\n\n  onStop = () => {\n    const { stream } = this.state;\n    if (stream) {\n      for (let track of stream.getTracks()) {\n        track.stop();\n      }\n    }\n    this.setState(state => {\n      state.loaded = false;\n      state.stream = null;\n      return state;\n    })\n  }\n\n  onParamChange = (key, value) => {\n    this.setState(state => {\n      state[key] = value;\n      return state;\n    })\n  }\n\n  render() {\n    const {\n      detectorName,\n      sampleRate,\n      windowSize,\n      clarityThreshold,\n      loading,\n      loaded,\n      stream\n    } = this.state;\n    return (\n      <div className=\"app\">\n        <HeaderComponent />\n\n        <div className=\"content-container\">\n          \n          {!loaded &&\n          <LoaderComponent\n            detectorName={detectorName}\n            sampleRate={sampleRate}\n            windowSize={windowSize}\n            clarityThreshold={clarityThreshold}\n            onParamChange={this.onParamChange}\n            onStart={this.onStart}\n            loading={loading}\n          />\n          }\n\n          {loaded &&\n          <PitchComponent\n            stream={stream}\n            detectorClass={getDetectorClass(detectorName)}\n            sampleRate={sampleRate}\n            windowSize={windowSize}\n            powerThreshold={this.POWER_THRESHOLD}\n            clarityThreshold={clarityThreshold}\n            onStop={this.onStop}\n          />        \n          }\n        \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import _classCallCheck from \"/home/alessandro/Software/rust/pitch-detection-www/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alessandro/Software/rust/pitch-detection-www/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* tslint:disable */\nimport * as wasm from './pitch_detection_wasm_bg';\nvar cachegetFloat32Memory = null;\n\nfunction getFloat32Memory() {\n  if (cachegetFloat32Memory === null || cachegetFloat32Memory.buffer !== wasm.memory.buffer) {\n    cachegetFloat32Memory = new Float32Array(wasm.memory.buffer);\n  }\n\n  return cachegetFloat32Memory;\n}\n\nvar WASM_VECTOR_LEN = 0;\n\nfunction passArrayF32ToWasm(arg) {\n  var ptr = wasm.__wbindgen_malloc(arg.length * 4);\n\n  getFloat32Memory().set(arg, ptr / 4);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n\nfunction freeMcLeodDetector(ptr) {\n  wasm.__wbg_mcleoddetector_free(ptr);\n}\n/**\n*/\n\n\nexport var McLeodDetector =\n/*#__PURE__*/\nfunction () {\n  function McLeodDetector() {\n    _classCallCheck(this, McLeodDetector);\n  }\n\n  _createClass(McLeodDetector, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeMcLeodDetector(ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {McLeodDetector}\n    */\n\n  }, {\n    key: \"get_pitch\",\n\n    /**\n    * @param {Float32Array} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @param {Float32Array} arg4\n    * @returns {void}\n    */\n    value: function get_pitch(arg0, arg1, arg2, arg3, arg4) {\n      var ptr0 = passArrayF32ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n      var ptr4 = passArrayF32ToWasm(arg4);\n      var len4 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.mcleoddetector_get_pitch(this.ptr, ptr0, len0, arg1, arg2, arg3, ptr4, len4);\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n\n        arg4.set(getFloat32Memory().subarray(ptr4 / 4, ptr4 / 4 + len4));\n\n        wasm.__wbindgen_free(ptr4, len4 * 4);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(McLeodDetector.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(arg0, arg1) {\n      return McLeodDetector.__wrap(wasm.mcleoddetector_new(arg0, arg1));\n    }\n  }]);\n\n  return McLeodDetector;\n}();\n\nfunction freeAutocorrelationDetector(ptr) {\n  wasm.__wbg_autocorrelationdetector_free(ptr);\n}\n/**\n*/\n\n\nexport var AutocorrelationDetector =\n/*#__PURE__*/\nfunction () {\n  function AutocorrelationDetector() {\n    _classCallCheck(this, AutocorrelationDetector);\n  }\n\n  _createClass(AutocorrelationDetector, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeAutocorrelationDetector(ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @returns {AutocorrelationDetector}\n    */\n\n  }, {\n    key: \"get_pitch\",\n\n    /**\n    * @param {Float32Array} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @param {Float32Array} arg4\n    * @returns {void}\n    */\n    value: function get_pitch(arg0, arg1, arg2, arg3, arg4) {\n      var ptr0 = passArrayF32ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n      var ptr4 = passArrayF32ToWasm(arg4);\n      var len4 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.autocorrelationdetector_get_pitch(this.ptr, ptr0, len0, arg1, arg2, arg3, ptr4, len4);\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n\n        arg4.set(getFloat32Memory().subarray(ptr4 / 4, ptr4 / 4 + len4));\n\n        wasm.__wbindgen_free(ptr4, len4 * 4);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(AutocorrelationDetector.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(arg0, arg1) {\n      return AutocorrelationDetector.__wrap(wasm.autocorrelationdetector_new(arg0, arg1));\n    }\n  }]);\n\n  return AutocorrelationDetector;\n}();\nvar cachedTextDecoder = new TextDecoder('utf-8');\nvar cachegetUint8Memory = null;\n\nfunction getUint8Memory() {\n  if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nexport function __wbindgen_throw(ptr, len) {\n  throw new Error(getStringFromWasm(ptr, len));\n}","module.exports = __webpack_public_path__ + \"static/media/play.7674a1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.292a58fa.svg\";"],"sourceRoot":""}