{"version":3,"sources":["constants/colors.js","components/header/index.tsx","components/loader/play.svg","components/loader/index.tsx","../../display/dist/constants/index.js","../../display/dist/utils/index.js","../../display/dist/pitch-display/index.js","components/pitch/stop.svg","components/pitch/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BACKGROUND","PRIMARY","PRIMARY_TEXT","Header","props","className","style","backgroundColor","color","Loader","detectorName","windowSize","clarityThreshold","onParamChange","onStart","loading","Fragment","textAlign","href","target","value","onChange","e","parseInt","type","min","max","step","parseFloat","disabled","onClick","src","PlayIcon","NOTE_STRINGS","OCTAVE_COLORS","noteFromPitch","frequency","noteNum","Math","log","round","centsOffFromPitch","note","floor","pow","frequencyFromNoteNumber","colorFromNote","octave","idx","length","PitchDisplay","container","timeSpan","timeOffset","this","frequencies","background","highlight","position","canvasStyle","bgCanvas","document","createElement","setAttribute","bgContext","getContext","noteCanvas","noteContext","appendChild","resize","w","clientWidth","h","clientHeight","width","height","scaleX","scaleLinear","domain","range","margin","scaleY","render","push","filter","val","now","time","full","Date","getTime","cleanupFrequencies","drawBackground","drawNotes","fillStyle","clearRect","fillRect","i","y","font","fillText","beginPath","strokeStyle","notes","t","f","c","clarity","centsOff","x","stroke","moveTo","lineTo","arc","PI","fill","PitchComponent","audioContext","mediaStreamSource","analyser","buffer","pending","quit","displayElement","React","createRef","pitchDisplay","mainLoop","requestAnimationFrame","updatePitch","onResize","current","setBackgroundColor","stream","workerConnection","remoteHandle","call","then","Float32Array","AudioContext","createMediaStreamSource","createAnalyser","fftSize","connect","window","addEventListener","console","removeEventListener","powerThreshold","getFloatTimeDomainData","sampleRate","result","pushFrequency","onStop","ref","StopIcon","Component","App","POWER_THRESHOLD","setState","state","navigator","mediaDevices","getUserMedia","audio","echoCancellation","autoGainControl","loaded","catch","undefined","getTracks","stop","key","worker","Worker","process","messenger","WorkerMessenger","ParentHandshake","connection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77a54f45.chunk.js","sourcesContent":["export const BACKGROUND = \"#F5F5F5\";\n\nexport const PRIMARY = \"#3f51b5\";\nexport const PRIMARY_LIGHT = \"#757de8\";\nexport const PRIMARY_DARK = \"#002984\";\nexport const PRIMARY_TEXT = \"#ffffff\";\n\nexport const SECONDARY = \"#9c27b0\";\nexport const SECONDARY_LIGHT = \"#d05ce3\";\nexport const SECONDARY_DARK = \"#6a0080\";\nexport const SECONDARY_TEXT = \"#ffffff\";\n","import React from 'react';\n\nimport { PRIMARY, PRIMARY_TEXT } from '../../constants/colors';\n\ninterface Props { }\n\nconst Header: React.FC<Props> = (props) => {\n  return (\n    <div className=\"header\" style={{ backgroundColor: PRIMARY, color: PRIMARY_TEXT }}>\n      Pitch Detector\n    </div>\n  )\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/play.f8ecb826.svg\";","import React from 'react';\n\nimport { BACKGROUND, PRIMARY, PRIMARY_LIGHT, PRIMARY_TEXT } from '../../constants/colors';\nimport { State as AppState } from '../../App';\n\nimport PlayIcon from './play.svg';\n\ninterface Props {\n  detectorName: 'autocorrelation' | 'mcleod';\n  loading: boolean;\n  windowSize: number;\n  clarityThreshold: number;\n  onParamChange: <K extends keyof AppState>(key: K, value: AppState[K]) => void;\n  onStart: () => void;\n}\n\nconst Loader: React.FC<Props> = ({ detectorName, windowSize, clarityThreshold, onParamChange, onStart, loading }) => {\n  return (\n    <React.Fragment>\n      <div className=\"content\" style={{ textAlign: 'center' }}>\n        <h2>\n          A Rust + WebAssembly Pitch Detector\n        </h2>\n\n        <h3>\n          Author\n        </h3>\n        <span>\n          Alessandro Genova\n        </span>\n\n        <h3>\n          Core Library\n        </h3>\n        <span>\n          <a href=\"https://github.com/alesgenova/pitch-detection\" target=\"_blank\">Source</a>\n          <br />\n          (rust)\n        </span>\n\n        <h3>\n          Demo App\n        </h3>\n        <span>\n          <a href=\"https://github.com/alesgenova/pitch-detection-app\" target=\"_blank\">Source</a>\n          <br />\n          (wasm, react)\n        </span>\n\n        <br />\n\n        <h3>\n          Detector\n        </h3>\n        <select value={detectorName} onChange={(e) => { onParamChange('detectorName', e.target.value as any) }}>\n          <option value=\"mcleod\">McLeod</option>\n          <option value=\"autocorrelation\">Autocorrelation</option>\n        </select>\n\n        <h3>\n          Window Size\n        </h3>\n        <select value={windowSize} onChange={(e) => { onParamChange('windowSize', parseInt(e.target.value)) }}>\n          <option value={512}>512 samples</option>\n          <option value={1024}>1024 samples</option>\n          <option value={2048}>2048 samples</option>\n          <option value={4096}>4096 samples</option>\n        </select>\n\n        <h3>\n          Clarity Threshold\n        </h3>\n        <input value={clarityThreshold} type=\"range\" min={0.0} max={1.0} step={0.01} onChange={(e) => { onParamChange('clarityThreshold', parseFloat(e.target.value)) }} />\n        <br />\n        ({clarityThreshold})\n\n      </div>\n      <div className=\"floating-container-center\">\n        <button\n          disabled={loading}\n          onClick={onStart}\n          className=\"floating-button-large\"\n          style={{ backgroundColor: loading ? PRIMARY_LIGHT : PRIMARY, color: PRIMARY_TEXT }}\n        >\n          <img src={PlayIcon} />\n        </button>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Loader;\n","export const NOTE_STRINGS = [\"C\", \"Db\", \"D\", \"Eb\", \"E\", \"F\", \"Gb\", \"G\", \"Ab\", \"A\", \"Bb\", \"B\"];\nexport const OCTAVE_COLORS = [\n    [121, 85, 72],\n    [158, 158, 158],\n    [96, 125, 139],\n    [76, 175, 80],\n    [244, 67, 54],\n    [33, 150, 243],\n    [0, 150, 136],\n    [255, 235, 59],\n    [0, 188, 212],\n];\n","import { OCTAVE_COLORS } from '../constants';\nexport function noteFromPitch(frequency) {\n    let noteNum = 12 * (Math.log(frequency / 440) / Math.log(2));\n    return Math.round(noteNum) + 69;\n}\nexport function frequencyFromNoteNumber(note) {\n    return 440 * Math.pow(2, (note - 69) / 12);\n}\nexport function centsOffFromPitch(frequency, note) {\n    return Math.floor(1200 * Math.log(frequency / frequencyFromNoteNumber(note)) / Math.log(2));\n}\nexport function colorFromNote(note) {\n    let octave = Math.floor(note / 12) - 1;\n    let idx = Math.min(octave, OCTAVE_COLORS.length - 1);\n    idx = Math.max(0, idx);\n    return OCTAVE_COLORS[idx];\n}\n","import { scaleLinear } from 'd3-scale';\nimport { NOTE_STRINGS } from '../constants';\nimport { noteFromPitch, colorFromNote, centsOffFromPitch } from '../utils';\nclass PitchDisplay {\n    constructor(container, timeSpan = 15000, timeOffset = 7000) {\n        this.frequencies = [];\n        this.background = '#efefef';\n        this.highlight = '#888888';\n        this.container = container;\n        this.container.style.position = \"relative\";\n        const canvasStyle = \"position: absolute; width: 100%; height: 100%;\";\n        this.bgCanvas = document.createElement(\"canvas\");\n        this.bgCanvas.setAttribute(\"style\", canvasStyle);\n        this.bgContext = this.bgCanvas.getContext('2d');\n        this.noteCanvas = document.createElement(\"canvas\");\n        this.noteCanvas.setAttribute(\"style\", canvasStyle);\n        this.noteContext = this.noteCanvas.getContext('2d');\n        this.container.appendChild(this.bgCanvas);\n        this.container.appendChild(this.noteCanvas);\n        this.timeSpan = timeSpan;\n        this.timeOffset = timeOffset;\n        this.resize();\n    }\n    resize() {\n        let w = this.container.clientWidth;\n        let h = this.container.clientHeight;\n        this.bgCanvas.width = w;\n        this.bgCanvas.height = h;\n        this.noteCanvas.width = w;\n        this.noteCanvas.height = h;\n        this.scaleX = scaleLinear()\n            .domain([-this.timeOffset, -this.timeOffset + this.timeSpan])\n            .range([0, w]);\n        let margin = h / (NOTE_STRINGS.length + 1);\n        this.scaleY = scaleLinear()\n            .domain([0, NOTE_STRINGS.length - 1])\n            .range([h - margin, margin]);\n        this.render();\n    }\n    pushFrequency(frequency) {\n        this.frequencies.push(frequency);\n    }\n    cleanupFrequencies() {\n        // Throw away the frequencies that are out of the current display window\n        this.frequencies = this.frequencies.filter((val) => this.now - val.time < this.timeOffset);\n    }\n    render(full = true) {\n        this.now = (new Date()).getTime();\n        this.cleanupFrequencies();\n        if (full) {\n            this.drawBackground();\n        }\n        this.drawNotes();\n    }\n    setBackgroundColor(color) {\n        this.background = color;\n        this.drawBackground();\n    }\n    setHighlightColor(color) {\n        this.highlight = color;\n        this.drawBackground();\n    }\n    drawBackground() {\n        let w = this.bgCanvas.width;\n        let h = this.bgCanvas.height;\n        this.bgContext.fillStyle = this.background;\n        this.bgContext.clearRect(0, 0, w, h);\n        this.bgContext.fillRect(0, 0, w, h);\n        for (let i = 0; i < NOTE_STRINGS.length; ++i) {\n            let y = this.scaleY(i);\n            this.bgContext.fillStyle = this.highlight + '55';\n            this.bgContext.fillRect(0, y, w, 1);\n            this.bgContext.fillStyle = this.highlight;\n            this.bgContext.font = '14px Sans';\n            this.bgContext.fillText(NOTE_STRINGS[i], this.scaleX(0) + 20, y - 2);\n            this.bgContext.fillText(NOTE_STRINGS[i], 20, y - 2);\n        }\n        this.bgContext.fillStyle = this.highlight + '55';\n        this.bgContext.fillRect(this.scaleX(0), 0, 1, h);\n    }\n    drawNotes() {\n        let w = this.noteCanvas.width;\n        let h = this.noteCanvas.height;\n        this.noteContext.clearRect(0, 0, w, h);\n        this.noteContext.beginPath();\n        this.noteContext.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n        // Calculate notes and colors from frequencies\n        const notes = [];\n        for (let frequency of this.frequencies) {\n            let t = frequency.time;\n            let f = frequency.frequency;\n            let c = frequency.clarity;\n            let note = noteFromPitch(f);\n            let centsOff = centsOffFromPitch(f, note);\n            let x = this.scaleX(t - this.now);\n            let y = this.scaleY(note % 12 + centsOff / 100);\n            let color = colorFromNote(note);\n            notes.push({\n                time: t,\n                x,\n                y,\n                clarity: c,\n                color\n            });\n        }\n        // Draw lines\n        const timeCutoff = 500;\n        this.noteContext.beginPath();\n        for (let i = 1; i < notes.length; ++i) {\n            const { x, y, time } = notes[i];\n            const prevTime = notes[i - 1].time;\n            if (time - prevTime > timeCutoff) {\n                this.noteContext.stroke();\n                this.noteContext.beginPath();\n                this.noteContext.moveTo(x, y);\n            }\n            else {\n                this.noteContext.lineTo(x, y);\n            }\n        }\n        this.noteContext.stroke();\n        // Draw circles\n        for (let note of notes) {\n            const { x, y, clarity, color } = note;\n            this.noteContext.fillStyle = `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${clarity * 0.5})`;\n            this.noteContext.beginPath();\n            this.noteContext.arc(x, y, 3, 0, Math.PI * 2);\n            this.noteContext.fill();\n        }\n    }\n}\nexport { PitchDisplay };\n","export default __webpack_public_path__ + \"static/media/stop.2f57eafa.svg\";","import React, { Component } from 'react';\nimport { Connection } from 'post-me';\n\nimport { PitchDisplay } from 'pitch-display';\n\nimport { BACKGROUND, SECONDARY, SECONDARY_LIGHT, SECONDARY_TEXT, PRIMARY_LIGHT } from '../../constants/colors';\nimport { WorkerMethods } from '../../../worker/types';\nimport StopIcon from './stop.svg';\n\ninterface Props {\n  stream: MediaStream;\n  workerConnection: Connection<{}, WorkerMethods, {}>;\n  detectorName: 'autocorrelation' | 'mcleod';\n  windowSize: number;\n  powerThreshold: number;\n  clarityThreshold: number;\n  onStop: () => void;\n}\n\nclass PitchComponent extends Component<Props> {\n  audioContext?: AudioContext;\n  mediaStreamSource?: MediaStreamAudioSourceNode;\n  analyser?: AnalyserNode;\n  buffer?: Float32Array;\n  pending = false;\n  quit = false;\n  displayElement = React.createRef<HTMLDivElement>();\n  pitchDisplay?: PitchDisplay;\n\n  componentDidMount() {\n    this.pitchDisplay = new PitchDisplay(this.displayElement.current!, 6000, 5000);\n    this.pitchDisplay.setBackgroundColor(BACKGROUND);\n    const { stream, workerConnection, detectorName, windowSize } = this.props;\n    workerConnection.remoteHandle().call('createDetector', detectorName, windowSize, windowSize / 2).then(() => {\n      this.buffer = new Float32Array(windowSize);\n      this.audioContext = new AudioContext();\n      // Create an AudioNode from the stream.\n      this.mediaStreamSource = this.audioContext.createMediaStreamSource(stream);\n      // Connect it to the destination.\n      this.analyser = this.audioContext.createAnalyser();\n      this.analyser.fftSize = windowSize;\n      this.mediaStreamSource.connect(this.analyser);\n      window.addEventListener('resize', this.onResize);\n      this.mainLoop();\n    });\n  }\n\n  componentWillUnmount() {\n    console.log('PitchComponent will unmount');\n    window.removeEventListener('resize', this.onResize);\n    this.quit = true;\n  }\n\n  mainLoop = () => {\n    if (this.quit) {\n      return;\n    }\n    requestAnimationFrame(this.mainLoop);\n    this.updatePitch();\n  }\n\n  onResize = () => {\n    if (this.pitchDisplay) {\n      this.pitchDisplay.resize();\n    }\n  }\n\n  updatePitch() {\n    if (!this.pending) {\n      this.pending = true;\n      const { powerThreshold, clarityThreshold, workerConnection } = this.props;\n      const time = (new Date()).getTime();\n      this.analyser!.getFloatTimeDomainData(this.buffer!);\n      workerConnection.remoteHandle().call('getPitch', this.buffer!, this.audioContext!.sampleRate, powerThreshold, clarityThreshold).then(result => {\n        const frequency = result[0];\n        const clarity = result[1];\n        if (frequency > 0) {\n          this.pitchDisplay!.pushFrequency({ frequency, clarity, time });\n        }\n        this.pending = false;\n      })\n    }\n    this.pitchDisplay!.render(false);\n  }\n\n  render() {\n    const { onStop } = this.props;\n    return (\n      <React.Fragment>\n        <div className=\"full\" style={{ position: 'relative' }}\n          ref={this.displayElement}\n        />\n        <div className=\"floating-container\">\n          <button\n            onClick={onStop}\n            className=\"floating-button\"\n            style={{ backgroundColor: SECONDARY, color: SECONDARY_TEXT }}\n          >\n            <img src={StopIcon} />\n          </button>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default PitchComponent;\n","import React from 'react';\n\nimport { WorkerMessenger, ParentHandshake, Connection } from 'post-me';\n\nimport HeaderComponent from './components/header';\nimport LoaderComponent from './components/loader';\nimport PitchComponent from './components/pitch';\nimport { BACKGROUND } from './constants/colors';\n\ninterface Props { };\nexport interface State {\n  loading: boolean;\n  loaded: boolean;\n  stream: MediaStream | undefined;\n  detectorName: 'mcleod' | 'autocorrelation';\n  windowSize: number;\n  clarityThreshold: number;\n  workerConnection: Connection | undefined;\n};\n\nclass App extends React.Component<Props, State> {\n  POWER_THRESHOLD = 0.15;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      loading: false,\n      loaded: false,\n      stream: undefined,\n      detectorName: 'mcleod',\n      windowSize: 1024,\n      clarityThreshold: 0.6,\n      workerConnection: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const worker = new Worker(`${process.env.PUBLIC_URL}/pitch-detection/worker.js`);\n\n    const messenger = new WorkerMessenger({ worker });\n\n    ParentHandshake(messenger, {}, 5, 1000).then(connection => {\n      this.setState({ workerConnection: connection });\n    }).catch(() => console.log(\"Failed connection to worker\"));\n  }\n\n  onStart = () => {\n    this.setState(state => {\n      return { ...state, loading: true };\n    });\n\n    const gotStream = (stream: MediaStream) => {\n      this.setState(state => {\n        return {\n          ...state,\n          loading: false,\n          loaded: true,\n          stream: stream\n        }\n      });\n    }\n\n    const gotError = (e: any) => {\n      console.log(e);\n      this.setState(state => {\n        return {\n          ...state,\n          loading: false,\n          loaded: false,\n          stream: undefined\n        }\n      });\n    }\n\n    const options = {\n      audio: {\n        echoCancellation: true,\n        autoGainControl: true,\n      }\n    }\n\n    navigator.mediaDevices.getUserMedia(options)\n      .then(gotStream)\n      .catch(gotError);\n  }\n\n  onStop = () => {\n    const { stream } = this.state;\n    if (stream) {\n      for (let track of stream.getTracks()) {\n        track.stop();\n      }\n    }\n    this.setState(state => {\n      return {\n        ...state,\n        loaded: false,\n        stream: undefined,\n      }\n    })\n  }\n\n  onParamChange = <K extends keyof State>(key: K, value: State[K]) => {\n    this.setState(state => {\n      return {\n        ...state,\n        [key]: value,\n      };\n    })\n  }\n\n  render() {\n    const {\n      detectorName,\n      windowSize,\n      clarityThreshold,\n      loading,\n      loaded,\n      stream,\n      workerConnection,\n    } = this.state;\n    return (\n      <div className=\"app\" style={{ backgroundColor: BACKGROUND }}>\n        <HeaderComponent />\n        <div className=\"content-container\">\n          {!loaded &&\n            <LoaderComponent\n              detectorName={detectorName}\n              windowSize={windowSize}\n              clarityThreshold={clarityThreshold}\n              onParamChange={this.onParamChange}\n              onStart={this.onStart}\n              loading={loading}\n            />\n          }\n\n          {(loaded && stream && workerConnection) &&\n            <PitchComponent\n              stream={stream}\n              detectorName={detectorName}\n              workerConnection={workerConnection}\n              windowSize={windowSize}\n              powerThreshold={this.POWER_THRESHOLD}\n              clarityThreshold={clarityThreshold}\n              onStop={this.onStop}\n            />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}